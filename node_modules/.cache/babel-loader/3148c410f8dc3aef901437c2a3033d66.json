{"ast":null,"code":"var _jsxFileName = \"/Users/anushkapanda/code/React_Projects/myapp/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useParams, useHistory, useEffect } from 'react';\nimport MedicineList from './MedicineList';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [diagnosis, setDiagnosis] = useState('');\n  const [xray, setXray] = useState('');\n  const [test, setTest] = useState('Select Tests');\n  const [physiotherapy, setPhysiotherapy] = useState('');\n  const [medicines, setMedicines] = useState('Select Medicines');\n  const [tenure, setTenure] = useState('');\n  const [comments, setComments] = useState('');\n  const [addMedicine, setAddMedicine] = useState(false);\n  const [addTest, setAddTest] = useState(false);\n  const [medicineArray, setMedicineArray] = useState([{\n    medicine: 'Crocin',\n    tenure: '2 days',\n    comments: 'Painkiller',\n    id: 1\n  }]);\n  let id = 1;\n\n  const handleMedicines = (m, t, c) => {\n    setAddMedicine(true);\n    id++;\n    newObj = {\n      medicines: m,\n      tenure: t,\n      comments: c,\n      id: id\n    };\n    setMedicineArray(medicineArray.push(newObj));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-treatment\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: diagnosis,\n        onChange: e => {\n          setDiagnosis(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Medicines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: medicines,\n        onChange: e => setMedicines(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select Medicines\",\n          children: \"Select Medicines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Crocin\",\n          children: \"Crocin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Disprin\",\n          children: \"Disprin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add tenure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: tenure,\n        onChange: e => setTenure(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: comments,\n        onChange: e => setComments(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMedicines,\n        children: \"Add medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), addMedicine && /*#__PURE__*/_jsxDEV(MedicineList, {\n        medicineObjects: medicineArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"XRays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: xray,\n        onChange: e => setXray(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: test,\n        onChange: e => setTest(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select Tests\",\n          children: \"Select Tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Blood Test\",\n          children: \"Blood Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Covid Test\",\n          children: \"Covid Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Physiotherapy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: physiotherapy,\n        onChange: e => setPhysiotherapy(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Treatment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), addMedicine && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"zve1SSQNRczK/zItox2W1b5KtTc=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/anushkapanda/code/React_Projects/myapp/src/Form.js"],"names":["useState","useParams","useHistory","useEffect","MedicineList","React","Form","diagnosis","setDiagnosis","xray","setXray","test","setTest","physiotherapy","setPhysiotherapy","medicines","setMedicines","tenure","setTenure","comments","setComments","addMedicine","setAddMedicine","addTest","setAddTest","medicineArray","setMedicineArray","medicine","id","handleMedicines","m","t","c","newObj","push","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useParams, useHistory, useEffect } from 'react';\nimport MedicineList from './MedicineList';\nimport React from \"react\";\nconst Form = () => {\n    const [diagnosis, setDiagnosis] = useState('');\n    const [xray, setXray] = useState('');\n    const [test, setTest] = useState('Select Tests');\n    const [physiotherapy, setPhysiotherapy] = useState('');\n    const [medicines, setMedicines] = useState('Select Medicines');\n    const [tenure, setTenure] = useState('');\n    const [comments, setComments] = useState('');\n    const [addMedicine, setAddMedicine] = useState(false);\n    const [addTest, setAddTest] = useState(false);\n    const [medicineArray, setMedicineArray] = useState(\n        [\n            {\n                medicine: 'Crocin',\n                tenure: '2 days',\n                comments: 'Painkiller', \n                id: 1\n            }\n        ]\n    );\n    let id = 1;\n    const handleMedicines = (m, t, c) => {\n        setAddMedicine(true);\n        id++;\n        newObj = {\n            medicines: m,\n            tenure: t,\n            comments: c,\n            id: id\n        };\n        setMedicineArray(medicineArray.push(newObj));\n    }\n    return (\n        <div className = \"add-treatment\">\n            <button>\n                Back\n            </button>\n            <form>\n                <label>Diagnosis</label>\n                <textarea \n                required\n                value={diagnosis}\n                onChange={(e) => {setDiagnosis(e.target.value)}}\n                ></textarea>\n                <h4>Medicines</h4>\n                <label>Select medicine</label>\n                <select\n                    value = {medicines}\n                    onChange = {(e) => setMedicines(e.target.value)}\n                >\n                    <option value=\"Select Medicines\">Select Medicines</option>\n                    <option value=\"Crocin\">Crocin</option>\n                    <option value=\"Disprin\">Disprin</option>\n                </select>\n                <label>Add tenure</label>\n                <input \n                type=\"text\" \n                required\n                value = {tenure}\n                onChange = {(e) => setTenure(e.target.value)}\n                ></input>\n                <label>Add Comments</label>\n                <textarea \n                required\n                value = {comments}\n                onChange = {(e) => setComments(e.target.value)}\n                ></textarea>\n                <button\n                onClick={handleMedicines}\n                >Add medicine</button>\n                { addMedicine && <MedicineList medicineObjects = {medicineArray}/>}\n                <label>XRays</label>\n                <textarea \n                required\n                value = {xray}\n                onChange = {(e) => setXray(e.target.value)}\n                ></textarea>\n                <label>Tests</label>\n                <select\n                value = {test}\n                onChange = {(e) => setTest(e.target.value)}\n                >\n                    <option value=\"Select Tests\">Select Tests</option>\n                    <option value=\"Blood Test\">Blood Test</option>\n                    <option value=\"Covid Test\">Covid Test</option>\n                </select>\n                <button>Add Test</button>\n                <label>Physiotherapy</label>\n                <textarea \n                required\n                value = {physiotherapy}\n                onChange = {(e) => setPhysiotherapy(e.target.value)}\n                ></textarea>\n                <button>Add Treatment</button>\n                { addMedicine && <p>Hello World</p>}\n            </form>\n        </div>\n    );\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}